{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isText = exports.isBlock = exports.isInline = void 0;\n\nvar blocks_1 = require(\"./blocks\");\n\nvar inlines_1 = require(\"./inlines\");\n/**\n * Tiny replacement for Object.values(object).includes(key) to\n * avoid including CoreJS polyfills\n */\n\n\nfunction hasValue(obj, value) {\n  for (var _i = 0, _a = Object.keys(obj); _i < _a.length; _i++) {\n    var key = _a[_i];\n\n    if (value === obj[key]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\n * Checks if the node is an instance of Inline.\n */\n\n\nfunction isInline(node) {\n  return hasValue(inlines_1.INLINES, node.nodeType);\n}\n\nexports.isInline = isInline;\n/**\n * Checks if the node is an instance of Block.\n */\n\nfunction isBlock(node) {\n  return hasValue(blocks_1.BLOCKS, node.nodeType);\n}\n\nexports.isBlock = isBlock;\n/**\n * Checks if the node is an instance of Text.\n */\n\nfunction isText(node) {\n  return node.nodeType === 'text';\n}\n\nexports.isText = isText;","map":{"version":3,"mappings":";;;;;;;AACA;;AACA;AAEA;;;;;;AAIA,SAASA,QAAT,CAAkBC,GAAlB,EAAgDC,KAAhD,EAA8D;AAC5D,OAAkB,uBAAM,CAACC,IAAP,CAAYF,GAAZ,CAAlB,EAAkBG,cAAlB,EAAkBA,IAAlB,EAAoC;AAA/B,QAAMC,GAAG,SAAT;;AACH,QAAIH,KAAK,KAAKD,GAAG,CAACI,GAAD,CAAjB,EAAwB;AACtB,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;AAED;;;;;AAGA,SAAgBC,QAAhB,CAAyBC,IAAzB,EAAmC;AACjC,SAAOP,QAAQ,CAACQ,iBAAD,EAAUD,IAAI,CAACE,QAAf,CAAf;AACD;;AAFDC;AAIA;;;;AAGA,SAAgBC,OAAhB,CAAwBJ,IAAxB,EAAkC;AAChC,SAAOP,QAAQ,CAACY,eAAD,EAASL,IAAI,CAACE,QAAd,CAAf;AACD;;AAFDC;AAIA;;;;AAGA,SAAgBG,MAAhB,CAAuBN,IAAvB,EAAiC;AAC/B,SAAOA,IAAI,CAACE,QAAL,KAAkB,MAAzB;AACD;;AAFDC","names":["hasValue","obj","value","keys","_i","key","isInline","node","inlines_1","nodeType","exports","isBlock","blocks_1","isText"],"sources":["../src/helpers.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}