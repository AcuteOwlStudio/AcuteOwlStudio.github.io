{"ast":null,"code":"\"use strict\";\n\nvar _require = require('../helpers/constants'),\n    URI = _require.URI;\n\nvar HTTP_METHODS = require('../helpers/http_methods');\n\nvar _require2 = require('../helpers/request_handler'),\n    requestHandler = _require2.requestHandler;\n\nvar headers;\n\nvar addParamsToObjectsEndpoint = function addParamsToObjectsEndpoint(endpoint, params) {\n  if (params && params.limit) {\n    endpoint += \"&limit=\".concat(params.limit);\n  }\n\n  if (params && params.skip) {\n    endpoint += \"&skip=\".concat(params.skip);\n  }\n\n  if (params && params.status) {\n    endpoint += \"&status=\".concat(params.status);\n  }\n\n  if (params && params.after) {\n    endpoint += \"&after=\".concat(params.after);\n  }\n\n  if (params && params.sort) {\n    endpoint += \"&sort=\".concat(params.sort);\n  }\n\n  if (params && params.show_metafields) {\n    endpoint += \"&show_metafields=\".concat(params.show_metafields);\n  }\n\n  if (params && params.pretty) {\n    endpoint += \"&pretty=\".concat(params.pretty);\n  }\n\n  if (params && params.props) {\n    endpoint += \"&props=\".concat(params.props);\n  }\n\n  if (params && params.query) {\n    endpoint += \"&query=\".concat(encodeURI(JSON.stringify(params.query)));\n  }\n\n  if (params && typeof params.use_cache !== 'undefined') {\n    endpoint += \"&use_cache=\".concat(params.use_cache);\n  }\n\n  return endpoint;\n};\n\nvar objectMethods = function objectMethods(bucket_config) {\n  return {\n    getObjects: function getObjects(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects?read_key=\").concat(bucket_config.read_key);\n      endpoint = addParamsToObjectsEndpoint(endpoint, params);\n      return requestHandler(HTTP_METHODS.GET, endpoint);\n    },\n    getObject: function getObject(params) {\n      if (!params) {\n        throw new Error('Must supply params object with object id');\n      }\n\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id, \"?read_key=\").concat(bucket_config.read_key);\n\n      if (params && params.status) {\n        endpoint += \"&status=\".concat(params.status);\n      }\n\n      if (params && params.props) {\n        endpoint += \"&props=\".concat(params.props);\n      }\n\n      if (params && typeof params.use_cache !== 'undefined') {\n        endpoint += \"&use_cache=\".concat(params.use_cache);\n      }\n\n      return requestHandler(HTTP_METHODS.GET, endpoint);\n    },\n    getObjectRevisions: function getObjectRevisions(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id, \"/revisions?read_key=\").concat(bucket_config.read_key);\n      endpoint = addParamsToObjectsEndpoint(endpoint, params);\n      return requestHandler(HTTP_METHODS.GET, endpoint);\n    },\n    getMergeRequestObjects: function getMergeRequestObjects(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/merge-requests/\").concat(params.id, \"/objects?read_key=\").concat(bucket_config.read_key);\n      endpoint = addParamsToObjectsEndpoint(endpoint, params);\n      return requestHandler(HTTP_METHODS.GET, endpoint);\n    },\n    addObject: function addObject(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects\");\n\n      if (bucket_config.write_key) {\n        headers = {\n          \"Authorization\": \"Bearer \".concat(bucket_config.write_key)\n        };\n      }\n\n      return requestHandler(HTTP_METHODS.POST, endpoint, params, headers);\n    },\n    addObjectRevision: function addObjectRevision(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id, \"/revisions\");\n      delete params.id;\n      delete params.type;\n\n      if (bucket_config.write_key) {\n        headers = {\n          \"Authorization\": \"Bearer \".concat(bucket_config.write_key)\n        };\n      }\n\n      return requestHandler(HTTP_METHODS.POST, endpoint, params, headers);\n    },\n    editObject: function editObject(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id);\n\n      if (bucket_config.write_key) {\n        headers = {\n          \"Authorization\": \"Bearer \".concat(bucket_config.write_key)\n        };\n      } // Remove id\n\n\n      delete params.id;\n      return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers);\n    },\n    getObjectMetafields: function getObjectMetafields(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id, \"/metafields?read_key=\").concat(bucket_config.read_key);\n      return requestHandler(HTTP_METHODS.GET, endpoint);\n    },\n    /// DEPRECATED\n    editObjectMetafields: function editObjectMetafields(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id, \"/metafields\");\n\n      if (bucket_config.write_key) {\n        headers = {\n          \"Authorization\": \"Bearer \".concat(bucket_config.write_key)\n        };\n      } // Remove id\n\n\n      delete params.id;\n      return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers);\n    },\n    editObjectMetafield: function editObjectMetafield(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id, \"/metafields/\").concat(params.key);\n\n      if (bucket_config.write_key) {\n        headers = {\n          \"Authorization\": \"Bearer \".concat(bucket_config.write_key)\n        };\n      } // Remove id\n\n\n      delete params.id;\n      delete params.key;\n      return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers);\n    },\n    deleteObject: function deleteObject(params) {\n      var endpoint = \"\".concat(URI, \"/buckets/\").concat(bucket_config.slug, \"/objects/\").concat(params.id);\n\n      if (bucket_config.write_key) {\n        headers = {\n          \"Authorization\": \"Bearer \".concat(bucket_config.write_key)\n        };\n      }\n\n      return requestHandler(HTTP_METHODS.DELETE, endpoint, null, headers);\n    }\n  };\n};\n\nmodule.exports = objectMethods;","map":{"version":3,"mappings":"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","names":["require","URI","HTTP_METHODS","requestHandler","headers","addParamsToObjectsEndpoint","endpoint","params","limit","skip","status","after","sort","show_metafields","pretty","props","query","encodeURI","JSON","stringify","use_cache","objectMethods","bucket_config","getObjects","slug","read_key","GET","getObject","Error","id","getObjectRevisions","getMergeRequestObjects","addObject","write_key","POST","addObjectRevision","type","editObject","PATCH","getObjectMetafields","editObjectMetafields","editObjectMetafield","key","deleteObject","DELETE","module","exports"],"sources":["D:\\Users\\Ranyo7\\Programming\\Atom\\AcuteOwlStudio\\node_modules\\cosmicjs\\src\\bucket\\object.js"],"sourcesContent":["const { URI } = require('../helpers/constants')\nconst HTTP_METHODS = require('../helpers/http_methods')\nconst { requestHandler } = require('../helpers/request_handler')\nlet headers;\n\nconst addParamsToObjectsEndpoint = (endpoint, params) => {\n  if (params && params.limit) {\n    endpoint += `&limit=${params.limit}`\n  }\n  if (params && params.skip) {\n    endpoint += `&skip=${params.skip}`\n  }\n  if (params && params.status) {\n    endpoint += `&status=${params.status}`\n  }\n  if (params && params.after) {\n    endpoint += `&after=${params.after}`\n  }\n  if (params && params.sort) {\n    endpoint += `&sort=${params.sort}`\n  }\n  if (params && params.show_metafields) {\n    endpoint += `&show_metafields=${params.show_metafields}`\n  }\n  if (params && params.pretty) {\n    endpoint += `&pretty=${params.pretty}`\n  }\n  if (params && params.props) {\n    endpoint += `&props=${params.props}`\n  }\n  if (params && params.query) {\n    endpoint += `&query=${encodeURI(JSON.stringify(params.query))}`\n  }\n  if (params && typeof params.use_cache !== 'undefined') {\n    endpoint += `&use_cache=${params.use_cache}`\n  }\n  return endpoint\n}\n\nconst objectMethods = (bucket_config) => ({\n  getObjects: (params) => {\n    let endpoint = `${URI}/buckets/${bucket_config.slug}/objects?read_key=${bucket_config.read_key}`\n    endpoint = addParamsToObjectsEndpoint(endpoint, params)\n    return requestHandler(HTTP_METHODS.GET, endpoint)\n  },\n  getObject: (params) => {\n    if (!params) {\n      throw new Error('Must supply params object with object id')\n    }\n    let endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}?read_key=${bucket_config.read_key}`\n    if (params && params.status) {\n      endpoint += `&status=${params.status}`\n    }\n    if (params && params.props) {\n      endpoint += `&props=${params.props}`\n    }\n    if (params && typeof params.use_cache !== 'undefined') {\n      endpoint += `&use_cache=${params.use_cache}`\n    }\n    return requestHandler(HTTP_METHODS.GET, endpoint)\n  },\n  getObjectRevisions: (params) => {\n    let endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}/revisions?read_key=${bucket_config.read_key}`\n    endpoint = addParamsToObjectsEndpoint(endpoint, params)\n    return requestHandler(HTTP_METHODS.GET, endpoint)\n  },\n  getMergeRequestObjects: (params) => {\n    let endpoint = `${URI}/buckets/${bucket_config.slug}/merge-requests/${params.id}/objects?read_key=${bucket_config.read_key}`\n    endpoint = addParamsToObjectsEndpoint(endpoint, params)\n    return requestHandler(HTTP_METHODS.GET, endpoint)\n  },\n  addObject: (params) => {\n    const endpoint = `${URI}/buckets/${bucket_config.slug}/objects`\n    if (bucket_config.write_key) {\n      headers = {\n        \"Authorization\": `Bearer ${bucket_config.write_key}`\n      }\n    }\n    return requestHandler(HTTP_METHODS.POST, endpoint, params, headers)\n  },\n  addObjectRevision: (params) => {\n    const endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}/revisions`\n    delete params.id\n    delete params.type\n    if (bucket_config.write_key) {\n      headers = {\n        \"Authorization\": `Bearer ${bucket_config.write_key}`\n      }\n    }\n    return requestHandler(HTTP_METHODS.POST, endpoint, params, headers)\n  },\n  editObject: (params) => {\n    const endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}`\n    if (bucket_config.write_key) {\n      headers = {\n        \"Authorization\": `Bearer ${bucket_config.write_key}`\n      }\n    }\n    // Remove id\n    delete params.id;\n    return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers)\n  },\n  getObjectMetafields: (params) => {\n    const endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}/metafields?read_key=${bucket_config.read_key}`\n    return requestHandler(HTTP_METHODS.GET, endpoint);\n  },\n  /// DEPRECATED\n  editObjectMetafields: (params) => {\n    const endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}/metafields`\n    if (bucket_config.write_key) {\n      headers = {\n        \"Authorization\": `Bearer ${bucket_config.write_key}`\n      }\n    }\n    // Remove id\n    delete params.id;\n    return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers)\n  },\n  editObjectMetafield: (params) => {\n    const endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}/metafields/${params.key}`\n    if (bucket_config.write_key) {\n      headers = {\n        \"Authorization\": `Bearer ${bucket_config.write_key}`\n      }\n    }\n    // Remove id\n    delete params.id;\n    delete params.key;\n    return requestHandler(HTTP_METHODS.PATCH, endpoint, params, headers)\n  },\n  deleteObject: (params) => {\n    const endpoint = `${URI}/buckets/${bucket_config.slug}/objects/${params.id}`\n    if (bucket_config.write_key) {\n      headers = {\n        \"Authorization\": `Bearer ${bucket_config.write_key}`\n      }\n    }\n    return requestHandler(HTTP_METHODS.DELETE, endpoint, null, headers)\n  }\n})\n\nmodule.exports = objectMethods\n"]},"metadata":{},"sourceType":"script"}